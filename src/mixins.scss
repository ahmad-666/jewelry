@import './colors.scss' ;
@mixin flex($dir,$mainAxis,$crossAxis,$wrap,$wrapBehave) {
    flex-direction: $dir ;
    justify-content: $mainAxis ;
    align-items: $crossAxis ;
    flex-wrap: $wrap ;
    align-content: $wrapBehave ;
}
@mixin bg($url,$pos,$repeat,$size){
    background: url($url) $pos $repeat ;
    background-size: $size ;
}
@mixin ellipse{
    white-space: nowrap ;
    overflow: hidden;
    text-overflow: ellipsis ;
}
@mixin multiEllipse($lineNum,$lineHeight,$ellipseColor){
    position: relative ;
    overflow: hidden;
    line-height: $lineHeight;
    max-height: $lineNum * $lineHeight ;
    text-align: justify; //we should not use text-align:center here  
    padding-left: 1em;
    padding-right: 0 ;
    .ellipse{
        color: $ellipseColor ; 
        position: absolute ;
        left: 0;
        bottom: 0 ;
        display: none ;
    }
	// let ellipses = document.querySelectorAll('.ellipse') ;
    // ellipses.forEach(ellipse => {
    //     let parent = ellipse.parentElement ;
    //     let threshold = parseInt(window.getComputedStyle(parent,null).getPropertyValue('max-height'));
    //     if(parent.scrollHeight > threshold) {
    //         ellipse.style.display = 'block' ;
    //     }
    //     else{
    //         parent.style.textAlign = 'center' ;
    //     }
    // })
}
@mixin fullSize{
    width: 100% ;
    height: 100%;
}
@mixin fullSize-abs{
    width: 100% ;
    height: 100%;
    top: 0 ;
    right: 0 ;
    position: absolute ;
}
@mixin center-x{
    position: absolute ;
    right: 50% ;
    transform: translateX(50%) ;
}
@mixin center-y{
    position: absolute ;
    top: 50% ;
    transform: translateY(-50%) ;
}
@mixin center-xy{
    position: absolute ;
    top: 50% ;
    right: 50% ;
    transform: translate(50%,-50%) ;
}
@mixin containerStyle{
    width: 80% ;
    height: auto;
    margin: $dist3 auto 0 auto ;
    padding: $dist1 $dist2 ;
    background-color: white ;
    box-shadow: 0 0 .6em .05em $shadowColor ;
}
@mixin mediaQ-w($maxWidth) {
    @media screen and (max-width: $maxWidth){
        @content ;
    }
}
@mixin mediaQ-h($maxHeight) {
    @media screen and (max-height: $maxHeight){
        @content ;
    }
}
@mixin mediaQ-wh($maxWidth,$maxHeight) {
    @media screen and (max-width: $maxWidth) and (max-height: $maxHeight){
        @content ;
    }
}